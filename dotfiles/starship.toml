"$schema" = 'https://starship.rs/config-schema.json'

add_newline = true

format = """($directory)( ${custom.jj}${custom.git_branch}${custom.git_commit}${custom.git_state}${custom.git_status})( $character)"""
right_format = """$cmd_duration $all"""

[character]
success_symbol = "[;](bold green)"
error_symbol = "[;](red)"
vimcmd_symbol = "[;](purple)"

[directory]
format = '[$path]($style)[$read_only]($read_only_style)'
style = "cyan"

[git_branch]
disabled = true
format = "[$branch]($style)"
style = "bright-black"

[custom.git_branch]
when = "! jj --ignore-working-copy root"
command = "starship module git_branch"
description = "Only show git_branch if we're not in a jj repo"
format = '[$symbol($output)]($style)'

[git_status]
disabled = true
format = "[[(*$conflicted$untracked$modified$staged$renamed$deleted)](218)( $ahead_behind$stashed)]($style)"
style = "cyan"
conflicted = ""
untracked = ""
modified = ""
staged = ""
renamed = ""
deleted = ""
stashed = "≡"

[custom.git_status]
when = "! jj --ignore-working-copy root"
command = "starship module git_status"
description = "Only show git_status if we're not in a jj repo"
format = '[$symbol($output)]($style)'

[git_commit]
disabled = true
format = '[\($hash$tag\)]($style)'
style = "bright-black"

[custom.git_commit]
when = "! jj --ignore-working-copy root"
command = "starship module git_commit"
description = "Only show git_commit if we're not in a jj repo"
format = '[$symbol($output)]($style)'

[git_state]
disabled = true
format = '\([$state( $progress_current/$progress_total)]($style)\)'
style = "bright-black"

[custom.git_state]
when = "! jj --ignore-working-copy root"
command = "starship module git_state"
description = "Only show git_state if we're not in a jj repo"
format = '[$symbol($output)]($style)'

[cmd_duration]
format = "[$duration]($style)"
style = "yellow"

[aws]
disabled = true

[package]
disabled = true

[nix_shell]
symbol = ""
format = " [$symbol]($style)"
impure_msg = ""
pure_msg = ""
style = "bright-blue"

[nodejs]
symbol = "\ued0d"
format = " [$symbol( $version)]($style)"
version_format = "v${major}"
style = "bright-blue"
not_capable_style = "bright-red"

[python]
symbol = "\ue73c"
format = " [$symbol( $virtualenv)]($style)"
style = "bright-blue"

[java]
symbol = "\ue738"
format = " [${symbol}( ${version})]($style)"
style = "bright-blue"
version_format = "${major}"

[rust]
symbol = "\ue7a8"
format = " [${symbol}( ${version})]($style)"
style = "bright-blue"

[custom.jj]
description = "The current jj status"
when = "jj --ignore-working-copy root"
format='[$symbol($output)]($style)'
style = "bright-black"
command = '''
jj log --revisions @ --no-graph --ignore-working-copy --color never --limit 1 --template '
  concat(
    raw_escape_sequence("\x1b[35m"),
    coalesce(bookmarks, change_id.shortest()),
    raw_escape_sequence("\x1b[0m"),
    " ",
    raw_escape_sequence("\x1b[90m"),
    if(empty, "∅ "),
    coalesce(
      truncate_end(27, description.first_line(), "…"),
      "(no description set)",
    ),
    raw_escape_sequence("\x1b[0m"),
    if(conflict, raw_escape_sequence("\x1b[91m") ++ "!" ++ raw_escape_sequence("\x1b[0m")),
    if(divergent, raw_escape_sequence("\x1b[91m") ++ "¡" ++ raw_escape_sequence("\x1b[0m")),
    if(hidden, raw_escape_sequence("\x1b[90m") ++ "¿" ++ raw_escape_sequence("\x1b[0m")),
    if(immutable, raw_escape_sequence("\x1b[90m") ++ "" ++ raw_escape_sequence("\x1b[0m")),
  )
'
'''
